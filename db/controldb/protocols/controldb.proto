// Copyright

syntax = "proto3";

package controldb_proto;

// The control db service definition.
service ControlDBService {
  rpc CreateDevice (Device) returns (CreateDeviceResponse) {}
  rpc GetDevice (DeviceKey) returns (Device) {}
  rpc DeleteDevice (DeviceKey) returns (DeleteDeviceResponse) {}
  rpc ListDevices (ListDeviceRequest) returns (stream Device) {}

  rpc CreateService (Service) returns (CreateServiceResponse) {}
  rpc GetService (ServiceKey) returns (Service) {}
  rpc DeleteService (ServiceKey) returns (DeleteServiceResponse) {}
  rpc ListServices (ListServiceRequest) returns (stream Service) {}

  rpc CreateServiceAttr (ServiceAttr) returns (CreateServiceAttrResponse) {}
  rpc GetServiceAttr (ServiceAttrKey) returns (ServiceAttr) {}
  rpc DeleteServiceAttr (ServiceAttrKey) returns (DeleteServiceAttrResponse) {}
  rpc UpdateServiceAttr (UpdateServiceAttrRequest) returns (UpdateServiceAttrResponse) {}

  rpc CreateServiceMember (ServiceMember) returns (CreateServiceMemberResponse) {}
  rpc GetServiceMember (ServiceMemberKey) returns (ServiceMember) {}
  rpc DeleteServiceMember (ServiceMemberKey) returns (DeleteServiceMemberResponse) {}
  rpc ListServiceMembers (ListServiceMemberRequest) returns (stream ServiceMember) {}
  rpc UpdateServiceMember (UpdateServiceMemberRequest) returns (UpdateServiceMemberResponse) {}

  rpc CreateConfigFile (ConfigFile) returns (CreateConfigFileResponse) {}
  rpc GetConfigFile (ConfigFileKey) returns (ConfigFile) {}
  rpc DeleteConfigFile (ConfigFileKey) returns (DeleteConfigFileResponse) {}
}

message DeviceKey {
  string clusterName = 1;
  string deviceName = 2;
}

message Device {
  string clusterName = 1;
  string deviceName = 2;
  string serviceName = 3;
}

message CreateDeviceResponse {
}

message DeleteDeviceResponse {
}

message AllDevices {
  repeated Device devices = 1;
}

message ListDeviceRequest {
  string clusterName = 1;
}

message ServiceKey {
  string clusterName = 1;
  string serviceName = 2;
}

message Service {
  string clusterName = 1;
  string serviceName = 2;
  string serviceUUID = 3;
}

message CreateServiceResponse {
}

message DeleteServiceResponse {
}

message AllServices {
  repeated Service services = 1;
}

message ListServiceRequest {
  string clusterName = 1;
}

message ServiceAttrKey {
  string serviceUUID = 1;
}

message ServiceAttr {
  string serviceUUID = 1;

  // same with db.ServiceAttr.ServiceStatus: CREATING, ACTIVE, DELETING, DELETED
  string serviceStatus = 2;
  int64 lastModified = 3;
  int64 replicas = 4;
  int64 volumeSizeGB = 5;
  string clusterName = 6;
  string serviceName = 7;
  string deviceName = 8;

  // whether the service has the strict membership, such as database replicas.
  // if yes, each serviceMember will be assigned a member name and registered to DNS.
  // in aws, DNS will be Route53.
  bool registerDNS = 9;
  string domainName = 10;
  string hostedZoneID = 11;
  bool requireStaticIP = 12;
}

message CreateServiceAttrResponse {
}

message DeleteServiceAttrResponse {
}

message UpdateServiceAttrRequest {
  ServiceAttr oldAttr = 1;
  ServiceAttr newAttr = 2;
}

message UpdateServiceAttrResponse {
}

message ServiceMemberKey {
  string serviceUUID = 1;
  string memberName = 2;
}

message ServiceMember {
  string serviceUUID = 1;
  string memberName = 2;

  string availableZone = 3;
  string taskID = 4;
  string containerInstanceID = 5;
  string serverInstanceID = 6;
  int64 lastModified = 7;

  string volumeID = 8;
  string deviceName = 9;
  string staticIP = 10;
  repeated MemberConfig configs = 11;
}

message CreateServiceMemberResponse {
}

message DeleteServiceMemberResponse {
}

message ListServiceMemberRequest {
  string serviceUUID = 1;
}

message UpdateServiceMemberRequest {
  ServiceMember oldMember = 1;
  ServiceMember newMember = 2;
}

message UpdateServiceMemberResponse {
}

message MemberConfig {
  string fileName = 1;
  string fileID = 2;
  string fileMD5 = 3;
}

message ConfigFileKey {
  string serviceUUID = 1;
  string fileID = 2;
}

message ConfigFile {
  string serviceUUID = 1;
  string fileID = 2;
  string fileMD5 = 3;
  string fileName = 4;
  uint32 fileMode = 5;
  int64 lastModified = 6;
  string content = 7;
}

message CreateConfigFileResponse {
}

message DeleteConfigFileResponse {
}

