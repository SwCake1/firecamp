{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description": "This template creates an AutoScalingGroup in the subnets.",
  "Parameters":{
    "ContainerPlatform":{
      "Type": "String",
      "Default": "ecs",
      "AllowedValues" : [ "ecs", "swarm" ],
      "Description":"The container orchestration platform."
    },
    "ContainerPlatformRole":{
      "Type": "String",
      "Default": "worker",
      "AllowedValues" : [ "manager", "worker" ],
      "Description":"The role in the container orchestration platform. For Swarm, one node could be a manager or worker."
    },
    "ClusterName":{
      "Type":"String",
      "Description":"Name of the cluster.",
      "Default":"default",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription": "Cluster name must start with a letter and can only contain letters, numbers, or hyphens."
    },
    "KeyPairName":{
      "Type":"AWS::EC2::KeyPair::KeyName",
      "Description":"Name of an existing EC2 KeyPair to enable SSH access to the cluster instances."
    },
    "Release": {
      "Type": "String",
      "Default": "latest",
      "Description": "The FireCamp release version"
    },
    "AvailabilityZones": {
      "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved.",
      "Type": "List<AWS::EC2::AvailabilityZone::Name>"
    },
    "SubnetIDs": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "Subnet-ID the existing subnet in your VPC where you want to deploy node(s).",
      "AllowedPattern": "subnet-[0-9a-z]{8}"
    },
    "DesiredCapacity":{
      "Type":"Number",
      "Default":"3",
      "Description":"Number of instances to launch in the cluster."
    },
    "MaxSize":{
      "Type":"Number",
      "Default":"3",
      "Description":"Maximum number of instances that can be launched in the cluster."
    },
    "ServiceSecurityGroupID": {
      "Type": "AWS::EC2::SecurityGroup::Id",
      "Description": "The SecurityGroup to access the services in the cluster."
    },
    "InternalAccessSecurityGroupID": {
      "Type": "AWS::EC2::SecurityGroup::Id",
      "Description": "The internal SecurityGroup for the cluster nodes to access each other."
    },
    "NodeInstanceProfileID": {
      "Type": "String",
      "Default": "",
      "Description": "ID of the instance IAM Profile"
    },
    "NodeInstanceType":{
      "Description":"EC2 instance type",
      "Type":"String",
      "Default":"t2.micro",
      "AllowedValues":[
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge"
      ],
      "ConstraintDescription":"Please choose a valid instance type."
    }
  },
  "Mappings": {
    "AWSAMIRegionMap": {
      "AMI": {
        "AMIID": "amzn-ami-hvm-2017.03.0.20170417-x86_64-gp2"
      },
      "ap-northeast-1": {
        "AMIID": "ami-923d12f5"
      },
      "ap-northeast-2": {
        "AMIID": "ami-9d15c7f3"
      },
      "ap-south-1": {
        "AMIID": "ami-52c7b43d"
      },
      "ap-southeast-1": {
        "AMIID": "ami-fc5ae39f"
      },
      "ap-southeast-2": {
        "AMIID": "ami-162c2575"
      },
      "ca-central-1": {
        "AMIID": "ami-0bd66a6f"
      },
      "eu-central-1": {
        "AMIID": "ami-b968bad6"
      },
      "eu-west-1": {
        "AMIID": "ami-01ccc867"
      },
      "eu-west-2": {
        "AMIID": "ami-b6daced2"
      },
      "sa-east-1": {
        "AMIID": "ami-37cfad5b"
      },
      "us-east-1": {
        "AMIID": "ami-c58c1dd3"
      },
      "us-east-2": {
        "AMIID": "ami-4191b524"
      },
      "us-west-1": {
        "AMIID": "ami-7a85a01a"
      },
      "us-west-2": {
        "AMIID": "ami-4836a428"
      }
    }
  },
  "Resources":{
    "ServiceAutoScalingGroup":{
      "Type":"AWS::AutoScaling::AutoScalingGroup",
      "Properties":{
        "VPCZoneIdentifier": {
          "Ref": "SubnetIDs"
        },
        "LaunchConfigurationName":{
          "Ref":"ContainerInstances"
        },
        "MinSize":"1",
        "MaxSize":{
          "Ref":"MaxSize"
        },
        "DesiredCapacity":{
          "Ref":"DesiredCapacity"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "ClusterName"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": {
              "Fn::Join":[
                "-",
                [
                  "firecamp",
                  {
                    "Ref": "ContainerPlatformRole"
                  }
                ]
              ]
            },
            "Value": {
              "Ref": "ClusterName"
            },
            "PropagateAtLaunch": "true"
          }
        ]
      },
      "CreationPolicy":{
        "ResourceSignal":{
          "Timeout":"PT10M"
        }
      },
      "UpdatePolicy":{
        "AutoScalingReplacingUpdate":{
          "WillReplace":"true"
        }
      }
    },
    "ContainerInstances":{
      "Type":"AWS::AutoScaling::LaunchConfiguration",
      "Properties":{
        "ImageId":{
          "Fn::FindInMap":[
            "AWSAMIRegionMap",
            {
              "Ref":"AWS::Region"
            },
            "AMIID"
          ]
        },
        "SecurityGroups":[
          {
            "Ref":"ServiceSecurityGroupID"
          },
          {
            "Ref":"InternalAccessSecurityGroupID"
          }
        ],
        "InstanceType":{
          "Ref":"NodeInstanceType"
        },
        "IamInstanceProfile":{
          "Ref":"NodeInstanceProfileID"
        },
        "KeyName":{
          "Ref":"KeyPairName"
        },
        "UserData":{
          "Fn::Base64":{
            "Fn::Join":[
              "",
              [
                "#!/bin/bash -ex\n",
                "yum install -y aws-cfn-bootstrap\n",

                "version=",
                {
                  "Ref": "Release"
                },
                "\n",

                "# get and run the node init script\n",
                "wget -O /tmp/init.sh https://s3.amazonaws.com/cloudstax/firecamp/releases/$version/cf-templates/init.sh\n",
                "chmod +x /tmp/init.sh\n",
                "/tmp/init.sh $version ",
                {
                  "Ref":"ClusterName"
                },
                " ",
                {
                  "Ref": "ContainerPlatform"
                },
                " ",
                {
                  "Ref": "ContainerPlatformRole"
                },
                " ",
                {
                  "Fn::Join": [
                    ",",
                    {
                      "Ref": "AvailabilityZones"
                    }
                  ]
                },
                "\n",
                "res=$?\n",
                "echo $res\n",

                "# Signal init result\n",
                "/opt/aws/bin/cfn-signal -e $res ",
                "         --stack ",
                {
                  "Ref":"AWS::StackName"
                },
                "         --resource ServiceAutoScalingGroup ",
                "         --region ",
                {
                  "Ref":"AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      }
    }
  }
}
