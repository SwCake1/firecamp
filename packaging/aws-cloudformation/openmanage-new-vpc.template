{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description": "This template will create a new VPC and deploy an ECS cluster.",
  "Parameters":{
    "ECSClusterName":{
      "Type":"String",
      "Description":"Name of the ECS cluster.",
      "Default":"default",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription": "Cluster name must start with a letter and can only contain letters, numbers, or hyphens."
    },

    "KeyPairName":{
      "Type":"AWS::EC2::KeyPair::KeyName",
      "Description":"Name of an existing EC2 KeyPair to enable SSH access to the ECS instances."
    },

    "AvailabilityZones": {
      "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and only 2 or 3 AZs are used for this deployment.",
      "Type": "List<AWS::EC2::AvailabilityZone::Name>"
    },
    "NumberOfAZs": {
      "AllowedValues": [
        "2",
        "3"
      ],
      "Description": "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.",
      "Default": "3",
      "Type": "String"
    },

    "VPCCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "Default": "10.0.0.0/16",
      "Type": "String",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Description": "CIDR Block for the VPC"
    },
    "PrivateSubnet1CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.0.0/19",
      "Description": "CIDR block for private subnet 1 located in Availability Zone 1.",
      "Type": "String"
    },
    "PrivateSubnet2CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.32.0/19",
      "Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
      "Type": "String"
    },
    "PrivateSubnet3CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.64.0/19",
      "Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
      "Type": "String"
    },
    "PublicSubnet1CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.128.0/20",
      "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
      "Type": "String"
    },
    "PublicSubnet2CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.144.0/20",
      "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
      "Type": "String"
    },
    "PublicSubnet3CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.160.0/20",
      "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
      "Type": "String"
    },

    "DesiredCapacityPerAZ":{
      "Type":"Number",
      "Default":"1",
      "Description":"Number of instances to launch in your ECS cluster."
    },
    "MaxSizePerAZ":{
      "Type":"Number",
      "Default":"1",
      "Description":"Maximum number of instances that can be launched in your ECS cluster."
    },
    "InstanceType":{
      "Description":"EC2 instance type",
      "Type":"String",
      "Default":"t2.micro",
      "AllowedValues":[
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge"
      ],
      "ConstraintDescription":"Please choose a valid instance type."
    }
  },
  "Conditions": {
    "RepeatSubnet": {
      "Fn::Equals": [
        {
          "Ref": "NumberOfAZs"
        },
        "2"
      ]
    },
    "GovCloudCondition": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Region"
        },
        "us-gov-west-1"
      ]
    }
  },
  "Resources":{
    "VPCStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3-us-west-2.amazonaws.com/cloudstax-cf-templates/aws-vpc.template",
        "Parameters": {
          "AvailabilityZones": {
            "Fn::Join": [
              ",",
              {
                "Ref": "AvailabilityZones"
              }
            ]
          },
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "NumberOfAZs": {
            "Ref": "NumberOfAZs"
          },
          "PrivateSubnet1ACIDR": {
            "Ref": "PrivateSubnet1CIDR"
          },
          "PrivateSubnet2ACIDR": {
            "Ref": "PrivateSubnet2CIDR"
          },
          "PrivateSubnet3ACIDR": {
            "Ref": "PrivateSubnet3CIDR"
          },
          "PublicSubnet1CIDR": {
            "Ref": "PublicSubnet1CIDR"
          },
          "PublicSubnet2CIDR": {
            "Ref": "PublicSubnet2CIDR"
          },
          "PublicSubnet3CIDR": {
            "Ref": "PublicSubnet3CIDR"
          },
          "VPCCIDR": {
            "Ref": "VPCCIDR"
          }
        }
      }
    },

    "EcsAccessSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Fn::GetAtt": [
            "VPCStack",
            "Outputs.VPCID"
          ]
        },
        "GroupDescription": "Instances with access to the services in ECS cluster"
      }
    },
    "EcsSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Fn::GetAtt": [
            "VPCStack",
            "Outputs.VPCID"
          ]
        },
        "GroupDescription": "The access ports to the services in ECS cluster",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp":"0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3000",
            "ToPort": "30000",
            "SourceSecurityGroupId": {
              "Ref": "EcsAccessSecurityGroup"
            }
          }
        ]
      }
    },
    "EcsInternalSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Fn::GetAtt": [
            "VPCStack",
            "Outputs.VPCID"
          ]
        },
        "GroupDescription": "The inter-server access ports in ECS cluster",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3000",
            "ToPort": "30000",
            "SourceSecurityGroupId": {
              "Ref": "EcsSecurityGroup"
            }
          }
        ]
      }
    },

    "ECSCluster":{
      "Type":"AWS::ECS::Cluster",
      "Properties" : {
        "ClusterName" : {
          "Ref": "ECSClusterName"
        }
      }
    },
    "taskdefinition":{
      "Type":"AWS::ECS::TaskDefinition",
      "Properties":{
        "Family":{
          "Fn::Join":[
            "-",
            [
              {
                "Ref":"ECSClusterName"
              },
              "openmanage-manageserver"
            ]
          ]
        },
        "ContainerDefinitions":[
          {
            "Name":{
              "Fn::Join":[
                "-",
                [
                  {
                    "Ref": "ECSClusterName"
                  },
                  "openmanage-manageserver-container"
                ]
              ]
            },
            "Cpu":"256",
            "Essential":"true",
            "Image":"cloudstax/openmanage-manageserver",
            "Memory":"2048",
            "MemoryReservation":"128",
            "PortMappings":[
              {
                "ContainerPort": "27040",
                "HostPort": "27040",
                "Protocol": "tcp"
              }
            ],
            "Environment":[
              {
                "Name": "CONTAINER_PLATFORM",
                "Value": "ecs"
              },
              {
                "Name": "DB_TYPE",
                "Value": "clouddb"
              }
            ]
          }
        ]
      }
    },
    "service":{
      "Type":"AWS::ECS::Service",
      "Properties":{
        "Cluster":{
          "Ref":"ECSCluster"
        },
        "DesiredCount":"1",
        "ServiceName": "openmanage-manageserver",
        "TaskDefinition":{
          "Ref":"taskdefinition"
        }
      }
    },

    "ECSAutoScalingGroup1": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3-us-west-2.amazonaws.com/cloudstax-cf-templates/openmanage-autoscalegroup.template",
        "Parameters": {
          "ECSClusterName": {
            "Ref": "ECSClusterName"
          },
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "SubnetId": {
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PrivateSubnet1AID"
            ]
          },
          "DesiredCapacityPerAZ": {
            "Ref": "DesiredCapacityPerAZ"
          },
          "MaxSizePerAZ":{
            "Ref": "MaxSizePerAZ"
          },
          "EcsSecurityGroup": {
            "Ref": "EcsSecurityGroup"
          },
          "EcsInternalSecurityGroup": {
            "Ref": "EcsInternalSecurityGroup"
          },
          "InstanceType":{
            "Ref": "InstanceType"
          }
        }
      }
    },
    "ECSAutoScalingGroup2": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3-us-west-2.amazonaws.com/cloudstax-cf-templates/openmanage-autoscalegroup.template",
        "Parameters": {
          "ECSClusterName": {
            "Ref": "ECSClusterName"
          },
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "SubnetId": {
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PrivateSubnet2AID"
            ]
          },
          "DesiredCapacityPerAZ": {
            "Ref": "DesiredCapacityPerAZ"
          },
          "MaxSizePerAZ":{
            "Ref": "MaxSizePerAZ"
          },
          "EcsSecurityGroup": {
            "Ref": "EcsSecurityGroup"
          },
          "EcsInternalSecurityGroup": {
            "Ref": "EcsInternalSecurityGroup"
          },
          "InstanceType":{
            "Ref": "InstanceType"
          }
        }
      }
    },
    "ECSAutoScalingGroup3": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3-us-west-2.amazonaws.com/cloudstax-cf-templates/openmanage-autoscalegroup.template",
        "Parameters": {
          "ECSClusterName": {
            "Ref": "ECSClusterName"
          },
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "SubnetId": {
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PrivateSubnet3AID"
            ]
          },
          "DesiredCapacityPerAZ": {
            "Ref": "DesiredCapacityPerAZ"
          },
          "MaxSizePerAZ":{
            "Ref": "MaxSizePerAZ"
          },
          "EcsSecurityGroup": {
            "Ref": "EcsSecurityGroup"
          },
          "EcsInternalSecurityGroup": {
            "Ref": "EcsInternalSecurityGroup"
          },
          "InstanceType":{
            "Ref": "InstanceType"
          }
        }
      }
    }
  },
  "Outputs":{
    "ecsservice":{
      "Value":{
        "Ref":"service"
      }
    },
    "ecscluster":{
      "Value":{
        "Ref":"ECSCluster"
      }
    },
    "taskdef":{
      "Value":{
        "Ref":"taskdefinition"
      }
    }
  }
}
