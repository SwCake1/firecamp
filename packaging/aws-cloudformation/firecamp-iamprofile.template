{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description": "This template creates the IAM InstanceProfile for the FireCamp ECS cluster nodes.",
  "Resources": {
    "EC2Role":{
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Statement":[
            {
              "Effect":"Allow",
              "Principal":{
                "Service":[
                  "ec2.amazonaws.com"
                ]
              },
              "Action":[
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path":"/",
        "Policies":[
          {
            "PolicyName":"firecamp-ecs-service",
            "PolicyDocument":{
              "Statement":[
                {
                  "Effect":"Allow",
                  "Action":[
                    "autoscaling:Describe*",
                    "autoscaling:UpdateAutoScalingGroup",
                  ],
                  "Resource":"*"
                },
                {
                  "Effect":"Allow",
                  "Action":[
                    "ecs:CreateService",
                    "ecs:DeleteService",
                    "ecs:Describe*",
                    "ecs:DeregisterTaskDefinition",
                    "ecs:ListTaskDefinitionFamilies",
                    "ecs:ListTaskDefinitions",
                    "ecs:ListTasks",
                    "ecs:RegisterTaskDefinition",
                    "ecs:RunTask",
                    "ecs:UpdateService",
                    "ecs:DiscoverPollEndpoint",
                    "ecs:Poll",
                    "ecs:RegisterContainerInstance",
                    "ecs:StartTelemetrySession",
                    "ecs:Submit*",
                    "ecs:Update*",
                  ],
                  "Resource":"*"
                },
                {
                  "Effect":"Allow",
                  "Action":[
                    "dynamodb:CreateTable",
                    "dynamodb:DescribeTable",
                    "dynamodb:DeleteTable",
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Query",
                  ],
                  "Resource":"*"
                },
                {
                  "Effect":"Allow",
                  "Action":[
                    "route53:CreateHostedZone",
                    "route53:ListHostedZonesByName",
                    "route53:GetHostedZone",
                    "route53:ChangeResourceRecordSets",
                    "route53:ListResourceRecordSets",
                    "route53:DeleteHostedZone"
                  ],
                  "Resource":"*"
                },
                {
                  "Effect":"Allow",
                  "Action":[
                    "logs:Create*",
                    "logs:Put*",
                    "logs:Delete*"
                  ],
                  "Resource":"*"
                },
                {
                  "Effect":"Allow",
                  "Action":[
                    "ec2:AssignPrivateIpAddresses",
                    "ec2:AssociateRouteTable",
                    "ec2:AttachInternetGateway",
                    "ec2:AttachNetworkInterface",
                    "ec2:AttachVolume",
                    "ec2:AuthorizeSecurityGroupEgress",
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:CreateInternetGateway",
                    "ec2:CreateNatGateway",
                    "ec2:CreateNetworkAcl",
                    "ec2:CreateNetworkAclEntry",
                    "ec2:CreateNetworkInterface",
                    "ec2:CreateRoute",
                    "ec2:CreateRouteTable",
                    "ec2:CreateSecurityGroup",
                    "ec2:CreateSubnet",
                    "ec2:CreateTags",
                    "ec2:CreateVolume",
                    "ec2:CreateVpc",
                    "ec2:DeleteInternetGateway",
                    "ec2:DeleteNatGateway",
                    "ec2:DeleteNetworkAcl",
                    "ec2:DeleteNetworkAclEntry",
                    "ec2:DeleteNetworkInterface",
                    "ec2:DeleteRoute",
                    "ec2:DeleteRouteTable",
                    "ec2:DeleteSecurityGroup",
                    "ec2:DeleteSubnet",
                    "ec2:DeleteTags",
                    "ec2:DeleteVolume",
                    "ec2:DeleteVpc",
                    "ec2:DescribeAvailabilityZones",
                    "ec2:DescribeHosts",
                    "ec2:DescribeImageAttribute",
                    "ec2:DescribeImages",
                    "ec2:DescribeInstanceStatus",
                    "ec2:DescribeInstances",
                    "ec2:DescribeInternetGateways",
                    "ec2:DescribeKeyPairs",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DescribeRegions",
                    "ec2:DescribeRouteTables",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeTags",
                    "ec2:DescribeVolumeAttribute",
                    "ec2:DescribeVolumeStatus",
                    "ec2:DescribeVolumes",
                    "ec2:DescribeVpcAttribute",
                    "ec2:DescribeVpcs",
                    "ec2:DetachInternetGateway",
                    "ec2:DetachNetworkInterface",
                    "ec2:DetachVolume",
                    "ec2:DisassociateAddress",
                    "ec2:DisassociateRouteTable",
                    "ec2:GetConsoleOutput",
                    "ec2:GetConsoleScreenshot",
                    "ec2:ModifyNetworkInterfaceAttribute",
                    "ec2:ModifyVpcAttribute",
                    "ec2:RebootInstances",
                    "ec2:ReleaseAddress",
                    "ec2:ReleaseHosts",
                  ],
                  "Resource":"*"
                }
              ]
            }
          }
        ]
      }
    },
    "Profile":{
      "Type":"AWS::IAM::InstanceProfile",
      "Properties":{
        "Path":"/",
        "Roles":[
          {
            "Ref":"EC2Role"
          }
        ]
      }
    }
  },
  "Outputs":{
    "NodeInstanceProfile":{
      "Value":{
        "Ref":"Profile"
      }
    }
  }
}
