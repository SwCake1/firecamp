{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description": "This template is intended to deploy an ECS cluster in an existing VPC.",
  "Parameters":{
    "ECSClusterName":{
      "Type":"String",
      "Description":"Name of the ECS cluster.",
      "Default":"default",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription": "Cluster name must start with a letter and can only contain letters, numbers, or hyphens."
    },
    "KeyName":{
      "Type":"AWS::EC2::KeyPair::KeyName",
      "Description":"Name of an existing EC2 KeyPair to enable SSH access to the ECS instances."
    },
    "VpcId":{
      "Type":"AWS::EC2::VPC::Id",
      "Description":"Select a VPC that allows instances to access the Internet."
    },
    "SubnetId":{
      "Type":"List<AWS::EC2::Subnet::Id>",
      "Description":"Select at two subnets in your selected VPC."
    },
    "DesiredCapacity":{
      "Type":"Number",
      "Default":"1",
      "Description":"Number of instances to launch in your ECS cluster."
    },
    "MaxSize":{
      "Type":"Number",
      "Default":"1",
      "Description":"Maximum number of instances that can be launched in your ECS cluster."
    },
    "OpenManageDBType": {
			"AllowedValues": [
				"clouddb",
				"controldb"
			],
			"Default": "clouddb",
		  "Description": "The openmanage db type",
			"Type": "String"
		},

    "InstanceType":{
      "Description":"EC2 instance type",
      "Type":"String",
      "Default":"t2.micro",
      "AllowedValues":[
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge"
      ],
      "ConstraintDescription":"Please choose a valid instance type."
    }
  },
  "Mappings": {
    "AWSAMIRegionMap": {
      "AMI": {
        "AMIID": "amzn-ami-hvm-2017.03.0.20170417-x86_64-gp2"
      },
      "ap-northeast-1": {
        "AMIID": "ami-923d12f5"
      },
      "ap-northeast-2": {
        "AMIID": "ami-9d15c7f3"
      },
      "ap-south-1": {
        "AMIID": "ami-52c7b43d"
      },
      "ap-southeast-1": {
        "AMIID": "ami-fc5ae39f"
      },
      "ap-southeast-2": {
        "AMIID": "ami-162c2575"
      },
      "ca-central-1": {
        "AMIID": "ami-0bd66a6f"
      },
      "eu-central-1": {
        "AMIID": "ami-b968bad6"
      },
      "eu-west-1": {
        "AMIID": "ami-01ccc867"
      },
      "eu-west-2": {
        "AMIID": "ami-b6daced2"
      },
      "sa-east-1": {
        "AMIID": "ami-37cfad5b"
      },
      "us-east-1": {
        "AMIID": "ami-c58c1dd3"
      },
      "us-east-2": {
        "AMIID": "ami-4191b524"
      },
      "us-west-1": {
        "AMIID": "ami-7a85a01a"
      },
      "us-west-2": {
        "AMIID": "ami-4836a428"
      }
    }
  },
  "Resources":{
    "ECSCluster":{
      "Type":"AWS::ECS::Cluster",
      "Properties" : {
        "ClusterName" : {
          "Ref": "ECSClusterName"
        }
      }
    },
    "EcsAccessSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "GroupDescription": "Instances with access to the services in ECS cluster"
      }
    },
    "EcsSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "GroupDescription": "The access ports to the services in ECS cluster",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp":"0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3000",
            "ToPort": "30000",
            "SourceSecurityGroupId": {
              "Ref": "EcsAccessSecurityGroup"
            }
          }
        ]
      }
    },
    "EcsInternalSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "GroupDescription": "The inter-server access ports in ECS cluster",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3000",
            "ToPort": "30000",
            "SourceSecurityGroupId": {
              "Ref": "EcsSecurityGroup"
            }
          }
        ]
      }
    },
    "taskdefinition":{
      "Type":"AWS::ECS::TaskDefinition",
      "Properties":{
        "Family":{
          "Fn::Join":[
            "-",
            [
              {
                "Ref":"ECSClusterName"
              },
              "openmanage-manageserver"
            ]
          ]
        },
        "ContainerDefinitions":[
          {
            "Name":{
              "Fn::Join":[
                "-",
                [
                  {
                    "Ref": "ECSClusterName"
                  },
                  "openmanage-manageserver-container"
                ]
              ]
            },
            "Cpu":"256",
            "Essential":"true",
            "Image":"cloudstax/openmanage-manageserver",
            "Memory":"2048",
            "MemoryReservation":"128",
            "PortMappings":[
              {
                "ContainerPort": "27040",
                "HostPort": "27040",
                "Protocol": "tcp"
              }
            ],
            "Environment":[
              {
                "Name": "CONTAINER_PLATFORM",
                "Value": "ecs"
              },
              {
                "Name": "DB_TYPE",
                "Value": {
                  "Ref": "OpenManageDBType"
                }
              }
            ]
          }
        ]
      }
    },
    "ECSAutoScalingGroup":{
      "DependsOn": "ECSCluster",
      "Type":"AWS::AutoScaling::AutoScalingGroup",
      "Properties":{
        "VPCZoneIdentifier":{
          "Ref":"SubnetId"
        },
        "LaunchConfigurationName":{
          "Ref":"ContainerInstances"
        },
        "MinSize":"1",
        "MaxSize":{
          "Ref":"MaxSize"
        },
        "DesiredCapacity":{
          "Ref":"DesiredCapacity"
        }
      },
      "CreationPolicy":{
        "ResourceSignal":{
          "Timeout":"PT10M"
        }
      },
      "UpdatePolicy":{
        "AutoScalingReplacingUpdate":{
          "WillReplace":"true"
        }
      }
    },
    "ContainerInstances":{
      "Type":"AWS::AutoScaling::LaunchConfiguration",
      "Properties":{
        "ImageId":{
          "Fn::FindInMap":[
            "AWSAMIRegionMap",
            {
              "Ref":"AWS::Region"
            },
            "AMIID"
          ]
        },
        "SecurityGroups":[
          {
            "Ref":"EcsSecurityGroup"
          },
          {
            "Ref": "EcsInternalSecurityGroup"
          }
        ],
        "InstanceType":{
          "Ref":"InstanceType"
        },
        "IamInstanceProfile":{
          "Ref":"EC2InstanceProfile"
        },
        "KeyName":{
          "Ref":"KeyName"
        },
        "UserData":{
          "Fn::Base64":{
            "Fn::Join":[
              "",
              [
                "#!/bin/bash -x\n",

                "# install docker\n",
                "yum install -y docker\n",
                "service docker start\n",

                "# install cloudstax ecs init\n",
                "wget -O /tmp/cloudstax-ecs-init-1.14.2-2.amzn1.x86_64.rpm https://raw.github.com/cloudstax/openmanage-packages/master/amazon-linux-ami/cloudstax-ecs-init-1.14.2-2.amzn1.x86_64.rpm\n",
                "rpm -ivh /tmp/cloudstax-ecs-init-1.14.2-2.amzn1.x86_64.rpm\n",
                "echo ECS_CLUSTER=",
                {
                  "Ref":"ECSCluster"
                },
                " >> /etc/ecs/ecs.config\n",
                "start ecs\n",

                "# install openmanage docker volume driver\n",
                "wget -O /tmp/openmanage-dockervolume-0.5-1.amzn1.x86_64.rpm https://raw.github.com/cloudstax/openmanage-packages/master/amazon-linux-ami/openmanage-dockervolume-0.5-1.amzn1.x86_64.rpm\n",
                "rpm -ivh /tmp/openmanage-dockervolume-0.5-1.amzn1.x86_64.rpm\n",
                "start openmanage-dockervolume\n",

                "yum install -y aws-cfn-bootstrap\n",
                "# Signal success\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref":"AWS::StackName"
                },
                "         --resource ECSAutoScalingGroup ",
                "         --region ",
                {
                  "Ref":"AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      }
    },
    "service":{
      "Type":"AWS::ECS::Service",
      "Properties":{
        "Cluster":{
          "Ref":"ECSCluster"
        },
        "DesiredCount":"1",
        "ServiceName": "openmanage-manageserver",
        "TaskDefinition":{
          "Ref":"taskdefinition"
        }
      }
    },
    "EC2Role":{
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Statement":[
            {
              "Effect":"Allow",
              "Principal":{
                "Service":[
                  "ec2.amazonaws.com"
                ]
              },
              "Action":[
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path":"/",
        "Policies":[
          {
            "PolicyName":"openmanage-ecs-service",
            "PolicyDocument":{
              "Statement":[
                {
                  "Effect":"Allow",
                  "Action":[
                    "autoscaling:*",
                    "ecs:*",
                    "dynamodb:*",
                    "ec2:*",
                    "route53:*"
                  ],
                  "Resource":"*"
                }
              ]
            }
          }
        ]
      }
    },
    "EC2InstanceProfile":{
      "Type":"AWS::IAM::InstanceProfile",
      "Properties":{
        "Path":"/",
        "Roles":[
          {
            "Ref":"EC2Role"
          }
        ]
      }
    }
  },
  "Outputs":{
    "ecsservice":{
      "Value":{
        "Ref":"service"
      }
    },
    "ecscluster":{
      "Value":{
        "Ref":"ECSCluster"
      }
    },
    "taskdef":{
      "Value":{
        "Ref":"taskdefinition"
      }
    }
  }
}
